
trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ServiceNameDockerHub'
  mapDockerSocket: true
  imageRepository: 'masprieto/vulnerable:evil-plus'
  containerRegistry: 'https://hub.docker.com/'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: prisma-cloud-compute-scan@3
      inputs:
       scanType: 'images'
       twistlockService: 'PrismaCloudComputeITX1'
       artifact: '$(imageRepository)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: latest

##    - task: Prisma Cloud IaC Scan@3
#      inputs:
#        Path: 'deploy.yaml'
#        prismaCloudService: 'SESanbox-PrismaCloud'
#        High: '1'
#        Medium: '1'
#        Low: '1'
#        Operator: 'or'
#        Tags: 'env: demo'